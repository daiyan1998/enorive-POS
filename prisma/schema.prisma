// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  password  String
  name          String?
  role          UserRole @default(USER)

  resetToken    String?  @unique

  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

}

enum UserRole {
  USER
  ADMIN
}


// Category model
model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  sortOrder   Int     @default(0)
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  menuItems   MenuItem[]
}

model MenuItem {
  id          String   @id @default(uuid())
  name        String
  description String?
  basePrice       Decimal
  categoryId  String
  isAvailable Boolean @default(true)
  isActive    Boolean @default(true)
  imageUrl   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category   Category   @relation(fields: [categoryId], references: [id])
  variants   MenuVariant[]
}

model MenuVariant {
  id          String   @id @default(uuid())
  name        String
  description String?
  menuItemId String
  priceAdd   Decimal @default(0)
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  menuItem   MenuItem   @relation(fields: [menuItemId], references: [id])
}
